current directory: /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ext/nokogiri
/Users/tomoya/.rbenv/versions/3.0.0/bin/ruby -I /Users/tomoya/.rbenv/versions/3.0.0/lib/ruby/3.0.0 -r ./siteconf20230228-46148-d59cod.rb extconf.rb
checking for whether -std=c99 is accepted as CFLAGS... yes
checking for whether -Wno-declaration-after-statement is accepted as CFLAGS... yes
checking for whether -O2 is accepted as CFLAGS... yes
checking for whether -g is accepted as CFLAGS... yes
checking for whether -Winline is accepted as CFLAGS... yes
checking for whether -Wmissing-noreturn is accepted as CFLAGS... yes
checking for whether -Wshorten-64-to-32 is accepted as CFLAGS... yes
checking for whether -Wno-error=unused-command-line-argument-hard-error-in-future is accepted as CFLAGS... no
checking for whether -Wno-unknown-warning-option is accepted as CFLAGS... yes
Building nokogiri using packaged libraries.
Static linking is enabled.
Cross build is disabled.
checking for iconv.h... yes
Using mini_portile version 2.8.1
checking for iconv... yes
---------- IMPORTANT NOTICE ----------
Building Nokogiri with a packaged version of libxml2-2.10.3.
Configuration options: --host\=x86_64-apple-darwin21 --enable-static --disable-shared --libdir\=/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxml2/2.10.3/lib --with-iconv\=yes --disable-dependency-tracking --without-python --without-readline --with-c14n --with-debug --with-threads --disable-shared --enable-static RANLIB\=/usr/bin/ranlib AR\=/usr/bin/ar CFLAGS\=-O2\ -U_FORTIFY_SOURCE\ -g\ -fPIC
The following patches are being applied:
  - 0001-Remove-script-macro-support.patch
  - 0002-Update-entities-to-remove-handling-of-ssi.patch
  - 0003-libxml2.la-is-in-top_builddir.patch
  - 0009-allow-wildcard-namespaces.patch

The Nokogiri maintainers intend to provide timely security updates, but if
this is a concern for you and want to use your OS/distro system library
instead, then abort this installation process and install nokogiri as
instructed at:

  https://nokogiri.org/tutorials/installing_nokogiri.html#installing-using-standard-system-libraries

Note, however, that nokogiri cannot guarantee compatibility with every
version of libxml2 that may be provided by OS/package vendors.

Extracting libxml2-2.10.3.tar.xz into tmp/x86_64-apple-darwin21/ports/libxml2/2.10.3... OK
Running git apply with /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/patches/libxml2/0001-Remove-script-macro-support.patch... OK
Running git apply with /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/patches/libxml2/0002-Update-entities-to-remove-handling-of-ssi.patch... OK
Running git apply with /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/patches/libxml2/0003-libxml2.la-is-in-top_builddir.patch... OK
Running git apply with /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/patches/libxml2/0009-allow-wildcard-namespaces.patch... OK
Running 'configure' for libxml2 2.10.3... OK
Running 'compile' for libxml2 2.10.3... OK
Running 'install' for libxml2 2.10.3... OK
Activating libxml2 2.10.3 (from /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxml2/2.10.3)...
Using mini_portile version 2.8.1
---------- IMPORTANT NOTICE ----------
Building Nokogiri with a packaged version of libxslt-1.1.37.
Configuration options: --host\=x86_64-apple-darwin21 --enable-static --disable-shared --libdir\=/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxslt/1.1.37/lib --disable-dependency-tracking --without-python --without-crypto --with-debug --with-libxml-prefix\=/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxml2/2.10.3 --disable-shared --enable-static RANLIB\=/usr/bin/ranlib AR\=/usr/bin/ar CFLAGS\=-O2\ -U_FORTIFY_SOURCE\ -g\ -fPIC
The following patches are being applied:
  - 0001-update-automake-files-for-arm64.patch

The Nokogiri maintainers intend to provide timely security updates, but if
this is a concern for you and want to use your OS/distro system library
instead, then abort this installation process and install nokogiri as
instructed at:

  https://nokogiri.org/tutorials/installing_nokogiri.html#installing-using-standard-system-libraries

Extracting libxslt-1.1.37.tar.xz into tmp/x86_64-apple-darwin21/ports/libxslt/1.1.37... OK
Running git apply with /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/patches/libxslt/0001-update-automake-files-for-arm64.patch... OK
Running 'configure' for libxslt 1.1.37... OK
Running 'compile' for libxslt 1.1.37... OK
Running 'install' for libxslt 1.1.37... OK
Activating libxslt 1.1.37 (from /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxslt/1.1.37)...
checking for whether -DNOKOGIRI_PACKAGED_LIBRARIES is accepted as CPPFLAGS... yes
xml2-config cflags: -I/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxml2/2.10.3/include/libxml2
checking for whether -DNOKOGIRI_LIBXML2_PATCHES="\"0001-Remove-script-macro-support.patch 0002-Update-entities-to-remove-handling-of-ssi.patch 0003-libxml2.la-is-in-top_builddir.patch 0009-allow-wildcard-namespaces.patch\"" is accepted as CPPFLAGS... yes
checking for -llzma... yes
xslt-config cflags: -I/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxml2/2.10.3/include/libxml2 -I/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ports/x86_64-darwin21/libxslt/1.1.37/include
checking for whether -DNOKOGIRI_LIBXSLT_PATCHES="\"0001-update-automake-files-for-arm64.patch\"" is accepted as CPPFLAGS... yes
checking for xmlParseDoc() in libxml/parser.h... yes
checking for xsltParseStylesheetDoc() in libxslt/xslt.h... yes
checking for exsltFuncRegister() in libexslt/exslt.h... yes
Using mini_portile version 2.8.1
---------- IMPORTANT NOTICE ----------
Building Nokogiri with a packaged version of libgumbo-1.0.0-nokogiri.
Configuration options: --disable-shared --enable-static CFLAGS\=-fPIC
Copying gumbo-parser files into tmp/x86_64-apple-darwin21/ports/libgumbo/1.0.0-nokogiri/gumbo-parser...
Running 'compile' for libgumbo 1.0.0-nokogiri... OK
Activating libgumbo 1.0.0-nokogiri (from ports/x86_64-darwin21/libgumbo/1.0.0-nokogiri)...
checking for whether -I/Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ext/nokogiri/ports/x86_64-darwin21/libgumbo/1.0.0-nokogiri/include is accepted as CPPFLAGS... yes
checking for gumbo_parse_with_options() in nokogiri_gumbo.h... yes
checking for xmlHasFeature()... yes
checking for xmlFirstElementChild()... yes
checking for xmlRelaxNGSetParserStructuredErrors()... yes
checking for xmlRelaxNGSetValidStructuredErrors()... yes
checking for xmlSchemaSetValidStructuredErrors()... yes
checking for xmlSchemaSetParserStructuredErrors()... yes
checking for rb_gc_location()... yes
checking for rb_category_warning()... yes
checking for whether -DNOKOGIRI_OTHER_LIBRARY_VERSIONS="\"libgumbo:1.0.0-nokogiri\"" is accepted as CPPFLAGS... yes
creating Makefile

current directory: /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ext/nokogiri
make "DESTDIR=" clean

current directory: /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ext/nokogiri
make "DESTDIR="
compiling gumbo.c
compiling html4_document.c
compiling html4_element_description.c
compiling html4_entity_lookup.c
compiling html4_sax_parser_context.c
compiling html4_sax_push_parser.c
compiling libxml2_backwards_compat.c
compiling nokogiri.c
compiling test_global_handlers.c
compiling xml_attr.c
compiling xml_attribute_decl.c
compiling xml_cdata.c
compiling xml_comment.c
compiling xml_document.c
compiling xml_document_fragment.c
compiling xml_dtd.c
compiling xml_element_content.c
compiling xml_element_decl.c
compiling xml_encoding_handler.c
compiling xml_entity_decl.c
compiling xml_entity_reference.c
compiling xml_namespace.c
compiling xml_node.c
compiling xml_node_set.c
compiling xml_processing_instruction.c
compiling xml_reader.c
compiling xml_relax_ng.c
compiling xml_sax_parser.c
compiling xml_sax_parser_context.c
compiling xml_sax_push_parser.c
compiling xml_schema.c
compiling xml_syntax_error.c
compiling xml_text.c
compiling xml_xpath_context.c
compiling xslt_stylesheet.c
linking shared-object nokogiri/nokogiri.bundle
Cleaning files only used during build.

current directory: /Users/tomoya/Dropbox/misc/tomoyatakano.github.io/vendor/bundle/ruby/3.0.0/gems/nokogiri-1.14.2/ext/nokogiri
make "DESTDIR=" install
/Users/tomoya/homebrew/bin/ginstall -c -m 0755 nokogiri.bundle ./.gem.20230228-46148-ugm1hc/nokogiri
installing nokogiri libraries
